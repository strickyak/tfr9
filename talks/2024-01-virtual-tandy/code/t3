# @ fc41 e6  = #2140306 T0(0 3e 3e 1  2 3 4 3f):07fc41 :: "krn.0edf349400"+0c41                     ldb       P$State,x           DAT image change flagged in process desc?
# & fc42 0c  = #2140307
# & fc43 c5  = #2140308
# - ---- --  = #2140309
# r 060c a0  = #2140310
# @ fc43 c5  = #2140311 T0(0 3e 3e 1  2 3 4 3f):07fc43 :: "krn.0edf349400"+0c43                     bitb      #ImgChg
# & fc44 10  = #2140312
# @ fc45 27  = #2140313 T0(0 3e 3e 1  2 3 4 3f):07fc45 :: "krn.0edf349400"+0c45                     beq       L0C65               if not, exit now: (clear carry not needed)
# & fc46 ef  = #2140314
# - ---- --  = #2140315
# @ fc36 39  = #2140316 T0(0 3e 3e 1  2 3 4 3f):07fc36 :: "krn.0edf349400"+0c36 L0C65               rts                           return
# & fc37 ae  = #2140317
# r 8fc9 fe  = #2140318
# r 8fca 1b  = #2140319
# - ---- --  = #2140320
# @ fe1b 1a  = #2140321 T0(0 3e 3e 1  2 3 4 3f):07fe1b :: "krn.0edf349400"+0e1b                     orcc      #IntMasks           shut off interrupts
# & fe1c 50  = #2140322
# & fe1d 97  = #2140323
# @ fe1d 97  = #2140324 T0(0 3e 3e 1  2 3 4 3f):07fe1d :: "krn.0edf349400"+0e1d                     sta       <D.SSTskN           save the task number for system state
# & fe1e a4  = #2140325
# - ---- --  = #2140326
# w 00a4 00  = #2140327
# @ fe1f 27  = #2140328 T0(0 3e 3e 1  2 3 4 3f):07fe1f :: "krn.0edf349400"+0e1f                     beq       Fst2                if task 0, we're done
# & fe20 07  = #2140329
# - ---- --  = #2140330
# @ fe28 32  = #2140331 T0(0 3e 3e 1  2 3 4 3f):07fe28 :: "krn.0edf349400"+0e28 Fst2                leas      ,u                  put stack ptr into U
# & fe29 c4  = #2140332
# & fe2a 3b  = #2140333
# - ---- --  = #2140334
# @ fe2a 3b  = #2140335 T0(0 3e 3e 1  2 3 4 3f):07fe2a :: "krn.0edf349400"+0e2a                     rti                           return
# & fe2b 96  = #2140336
# r 8fcb 84  = #2140337
# r 8fcc 0d  = #2140338
# r 8fcd 02  = #2140339
# r 8fce 00  = #2140340
# r 8fcf 01  = #2140341
# r 8fd0 10  = #2140342
# r 8fd1 9a  = #2140343
# r 8fd2 80  = #2140344
# r 8fd3 8e  = #2140345
# r 8fd4 00  = #2140346
# r 8fd5 c5  = #2140347
C_EVENT "EVENT_RTI" $fe2a #2140335: 8fcb:84 8fcc:0d 8fcd:02 8fce:00 8fcf:01 8fd0:10 8fd1:9a 8fd2:80 8fd3:8e 8fd4:00 8fd5:c5 8fd6:3b

"" === OS9_RETURN _542_ "c538_8fd6":  $49 = F$LDABY ( B=b=02, X=x=110, Y=dat_image_addr=9a80, ) #2139952 --> ( RA=result=0d, ) #2140335 T0[0 3e 3e 1 2 3 4 3f ]

# r 8fd6 3b  = #2140348
# r 8fd7 7a  = #2140349
# @ c53b 35  = #2140350 T0(0 3e 3e 1  2 3 4 3f):00853b :: "rbf.12ee88266a"+09a6                     puls      pc,u,x,b
# & c53c d4  = #2140351
# - ---- --  = #2140352
# - ---- --  = #2140353
# r 8fd7 7a  = #2140354
# r 8fd8 01  = #2140355
# r 8fd9 10  = #2140356
# r 8fda 92  = #2140357
# r 8fdb 0a  = #2140358
# r 8fdc bf  = #2140359
# r 8fdd e8  = #2140360
# r 8fde 01  = #2140361
# @ bfe8 81  = #2140362 T0(0 3e 3e 1  2 3 4 3f):007fe8 :: "rbf.12ee88266a"+0453                     cmpa      #$0D                is it a CR?
# & bfe9 0d  = #2140363
# @ bfea 27  = #2140364 T0(0 3e 3e 1  2 3 4 3f):007fea :: "rbf.12ee88266a"+0455                     beq       RdLn459             yes, skip ahead
# & bfeb 04  = #2140365
# - ---- --  = #2140366
# @ bff0 ee  = #2140367 T0(0 3e 3e 1  2 3 4 3f):007ff0 :: "rbf.12ee88266a"+045b RdLn459             ldu       PD.RGS,y            grab caller's register stack
# & bff1 26  = #2140368
# & bff2 ec  = #2140369
# - ---- --  = #2140370
# r 9a86 8f  =Y #2140371
# r 9a87 f4  = #2140372
# @ bff2 ec  = #2140373 T0(0 3e 3e 1  2 3 4 3f):007ff2 :: "rbf.12ee88266a"+045d                     ldd       R$Y,u               get number of bytes to read
# & bff3 46  = #2140374
# & bff4 a3  = #2140375
# - ---- --  = #2140376
# r 8ffa 00  =Y #2140377
# r 8ffb 8b  = #2140378
# @ bff4 a3  = #2140379 T0(0 3e 3e 1  2 3 4 3f):007ff4 :: "rbf.12ee88266a"+045f                     subd      $02,s               take out data read last sector??
# & bff5 62  = #2140380
# & bff6 ed  = #2140381
# - ---- --  = #2140382
# r 8fe0 00  =Y #2140383
# r 8fe1 7a  = #2140384
# - ---- --  = #2140385
# @ bff6 ed  = #2140386 T0(0 3e 3e 1  2 3 4 3f):007ff6 :: "rbf.12ee88266a"+0461                     std       R$Y,u               save as data bytes to read
# & bff7 46  = #2140387
# & bff8 20  = #2140388
# - ---- --  = #2140389
# w 8ffa 00  =Y #2140390
# w 8ffb 11  = #2140391
# @ bff8 20  = #2140392 T0(0 3e 3e 1  2 3 4 3f):007ff8 :: "rbf.12ee88266a"+0463                     bra       Read4C0             skip ahead
# & bff9 5d  = #2140393
# - ---- --  = #2140394
# @ c057 5f  = #2140395 T0(0 3e 3e 1  2 3 4 3f):008057 :: "rbf.12ee88266a"+04c2 Read4C0             clrb
# & c058 32  = #2140396
# @ c058 32  = #2140397 T0(0 3e 3e 1  2 3 4 3f):008058 :: "rbf.12ee88266a"+04c3 Read4C1             leas      -2,s                clear out crap on the stack
# & c059 7e  = #2140398
# & c05a 32  = #2140399
# - ---- --  = #2140400
# - ---- --  = #2140401
# @ c05a 32  = #2140402 T0(0 3e 3e 1  2 3 4 3f):00805a :: "rbf.12ee88266a"+04c5 Read4C3             leas      $0A,s
# & c05b 6a  = #2140403
# & c05c 34  = #2140404
# - ---- --  = #2140405
# - ---- --  = #2140406
# @ c05c 34  = #2140407 T0(0 3e 3e 1  2 3 4 3f):00805c :: "rbf.12ee88266a"+04c7 Read4C5             pshs      b,cc                preserve error status
# & c05d 05  = #2140408
# - ---- --  = #2140409
# - ---- --  = #2140410
# r 8fe6 db  = #2140411
# w 8fe5 00  = #2140412
# w 8fe4 84  = #2140413
# @ c05e a6  = #2140414 T0(0 3e 3e 1  2 3 4 3f):00805e :: "rbf.12ee88266a"+04c9                     lda       PD.MOD,y            get file mode
# & c05f 21  = #2140415
# & c060 85  = #2140416
# - ---- --  = #2140417
# r 9a81 01  = #2140418
# @ c060 85  = #2140419 T0(0 3e 3e 1  2 3 4 3f):008060 :: "rbf.12ee88266a"+04cb                     bita      #WRITE.             was it write?
# & c061 02  = #2140420
# @ c062 26  = #2140421 T0(0 3e 3e 1  2 3 4 3f):008062 :: "rbf.12ee88266a"+04cd                     bne       Read4D0             yes, return
# & c063 03  = #2140422
# - ---- --  = #2140423
# @ c064 17  = #2140424 T0(0 3e 3e 1  2 3 4 3f):008064 :: "rbf.12ee88266a"+04cf                     lbsr      L0B02               clear lock status, and send signals
# & c065 06  = #2140425
# & c066 4e  = #2140426
# - ---- --  = #2140427
# - ---- --  = #2140428
# - ---- --  = #2140429
# - ---- --  = #2140430
# w 8fe3 67  = #2140431
# w 8fe2 c0  = #2140432
# @ c6b5 34  = #2140433 T0(0 3e 3e 1  2 3 4 3f):0086b5 :: "rbf.12ee88266a"+0b20 L0B02                    pshs      y,b,cc
# & c6b6 25  = #2140434
# - ---- --  = #2140435
# - ---- --  = #2140436
# r 8fe2 c0  = #2140437
# w 8fe1 80  = #2140438
# w 8fe0 9a  = #2140439
# w 8fdf 00  = #2140440
# w 8fde 84  = #2140441
# @ c6b7 10  = #2140442 T0(0 3e 3e 1  2 3 4 3f):0086b7 :: "rbf.12ee88266a"+0b22                     ldy       PD.Exten,y
# & c6b8 ae  = #2140443
# & c6b9 a8  = #2140444
# & c6ba 30  = #2140445
# - ---- --  = #2140446
# r 9ab0 9a  =Y #2140447
# r 9ab1 c0  = #2140448
# @ c6bb 8d  = #2140449 T0(0 3e 3e 1  2 3 4 3f):0086bb :: "rbf.12ee88266a"+0b26                     bsr       L0ACF
# & c6bc c5  = #2140450
# - ---- --  = #2140451
# - ---- --  = #2140452
# - ---- --  = #2140453
# w 8fdd bd  = #2140454
# w 8fdc c6  = #2140455
# @ c682 86  = #2140456 T0(0 3e 3e 1  2 3 4 3f):008682 :: "rbf.12ee88266a"+0aed L0ACF               lda       #(EofLock!FileLock!RcdLock) get all types of lockout flags
# & c683 07  = #2140457
# @ c684 34  = #2140458 T0(0 3e 3e 1  2 3 4 3f):008684 :: "rbf.12ee88266a"+0aef L0AD1               pshs      u,y,x,b,a
# & c685 76  = #2140459
# - ---- --  = #2140460
# - ---- --  = #2140461
# r 8fdc c6  = #2140462
# w 8fdb f4  = #2140463
# w 8fda 8f  = #2140464
# w 8fd9 c0  = #2140465
# w 8fd8 9a  = #2140466
# w 8fd7 10  = #2140467
# w 8fd6 01  = #2140468
# w 8fd5 00  = #2140469
# w 8fd4 07  = #2140470
# @ c686 a5  = #2140471 T0(0 3e 3e 1  2 3 4 3f):008686 :: "rbf.12ee88266a"+0af1                     bita      PE.Lock,y           anything locked?
# & c687 27  = #2140472
# & c688 27  = #2140473
# - ---- --  = #2140474
# r 9ac7 05  = #2140475
# @ c688 27  = #2140476 T0(0 3e 3e 1  2 3 4 3f):008688 :: "rbf.12ee88266a"+0af3                     beq       L0AE0               no, skip ahead
# & c689 09  = #2140477
# - ---- --  = #2140478
# @ c68a 43  = #2140479 T0(0 3e 3e 1  2 3 4 3f):00868a :: "rbf.12ee88266a"+0af5                     coma                          invert lock bits
# & c68b a4  = #2140480
# @ c68b a4  = #2140481 T0(0 3e 3e 1  2 3 4 3f):00868b :: "rbf.12ee88266a"+0af6                     anda      PE.Lock,y           clear 'em
# & c68c 27  = #2140482
# & c68d a7  = #2140483
# - ---- --  = #2140484
# r 9ac7 05  = #2140485
# @ c68d a7  = #2140486 T0(0 3e 3e 1  2 3 4 3f):00868d :: "rbf.12ee88266a"+0af8                     sta       PE.Lock,y           save 'em
# & c68e 27  = #2140487
# & c68f 85  = #2140488
# - ---- --  = #2140489
# w 9ac7 00  = #2140490
# @ c68f 85  = #2140491 T0(0 3e 3e 1  2 3 4 3f):00868f :: "rbf.12ee88266a"+0afa                     bita      #FileLock           is whole file locked?
# & c690 02  = #2140492
# @ c691 26  = #2140493 T0(0 3e 3e 1  2 3 4 3f):008691 :: "rbf.12ee88266a"+0afc                     bne       L0AFD               yes, return
# & c692 1d  = #2140494
# - ---- --  = #2140495
# @ c693 33  = #2140496 T0(0 3e 3e 1  2 3 4 3f):008693 :: "rbf.12ee88266a"+0afe L0AE0               leau      ,y
# & c694 a4  = #2140497
# & c695 ae  = #2140498
# - ---- --  = #2140499
# @ c695 ae  = #2140500 T0(0 3e 3e 1  2 3 4 3f):008695 :: "rbf.12ee88266a"+0b00 L0AE2               ldx       PE.Wait,u
# & c696 c8  = #2140501
# & c697 10  = #2140502
# - ---- --  = #2140503
# r 9ad0 9a  =Y #2140504
# r 9ad1 c0  = #2140505
# @ c698 10  = #2140506 T0(0 3e 3e 1  2 3 4 3f):008698 :: "rbf.12ee88266a"+0b03                     cmpy      PE.Wait,u
# & c699 ac  = #2140507
# & c69a c8  = #2140508
# & c69b 10  = #2140509
# - ---- --  = #2140510
# r 9ad0 9a  =Y #2140511
# r 9ad1 c0  = #2140512
# - ---- --  = #2140513
# @ c69c 27  = #2140514 T0(0 3e 3e 1  2 3 4 3f):00869c :: "rbf.12ee88266a"+0b07                     beq       L0AFA
# & c69d 0f  = #2140515
# - ---- --  = #2140516
# @ c6ad ef  = #2140517 T0(0 3e 3e 1  2 3 4 3f):0086ad :: "rbf.12ee88266a"+0b18 L0AFA               stu       PE.Wait,u
# & c6ae c8  = #2140518
# & c6af 10  = #2140519
# - ---- --  = #2140520
# w 9ad0 9a  =Y #2140521
# w 9ad1 c0  = #2140522
# @ c6b0 35  = #2140523 T0(0 3e 3e 1  2 3 4 3f):0086b0 :: "rbf.12ee88266a"+0b1b L0AFD               puls      pc,u,y,x,b,a
# & c6b1 f6  = #2140524
# - ---- --  = #2140525
# - ---- --  = #2140526
# r 8fd4 07  = #2140527
# r 8fd5 00  = #2140528
# r 8fd6 01  = #2140529
# r 8fd7 10  = #2140530
# r 8fd8 9a  = #2140531
# r 8fd9 c0  = #2140532
# r 8fda 8f  = #2140533
# r 8fdb f4  = #2140534
# r 8fdc c6  = #2140535
# r 8fdd bd  = #2140536
# r 8fde 84  = #2140537
# @ c6bd 35  = #2140538 T0(0 3e 3e 1  2 3 4 3f):0086bd :: "rbf.12ee88266a"+0b28                     puls      pc,y,b,cc
# & c6be a5  = #2140539
# - ---- --  = #2140540
# - ---- --  = #2140541
# r 8fde 84  = #2140542
# r 8fdf 00  = #2140543
# r 8fe0 9a  = #2140544
# r 8fe1 80  = #2140545
# r 8fe2 c0  = #2140546
# r 8fe3 67  = #2140547
# r 8fe4 84  = #2140548
# @ c067 35  = #2140549 T0(0 3e 3e 1  2 3 4 3f):008067 :: "rbf.12ee88266a"+04d2 Read4D0             puls      b,cc,pc             restore & return
# & c068 85  = #2140550
# - ---- --  = #2140551
# - ---- --  = #2140552
# r 8fe4 84  = #2140553
# r 8fe5 00  = #2140554
# r 8fe6 db  = #2140555
# r 8fe7 a8  = #2140556
# r 8fe8 8e  = #2140557
# @ dba8 34  = #2140558 T0(0 3e 3e 1  2 3 4 3f):009ba8 :: "ioman.0a2512cd6d"+05ad L0538               pshs      b,cc                preserve return status (C,B) from call
# & dba9 05  = #2140559
# - ---- --  = #2140560
# - ---- --  = #2140561
# r 8fe8 8e  = #2140562
# w 8fe7 00  = #2140563
# w 8fe6 84  = #2140564
# @ dbaa 8d  = #2140565 T0(0 3e 3e 1  2 3 4 3f):009baa :: "ioman.0a2512cd6d"+05af                     bsr       L0595               Wake up next process in I/O Queue
# & dbab 59  = #2140566
# - ---- --  = #2140567
# - ---- --  = #2140568
# - ---- --  = #2140569
# w 8fe5 ac  = #2140570
# w 8fe4 db  = #2140571
# @ dc05 34  = #2140572 T0(0 3e 3e 1  2 3 4 3f):009c05 :: "ioman.0a2512cd6d"+060a L0595               pshs      y                   Save reg
# & dc06 20  = #2140573
# - ---- --  = #2140574
# - ---- --  = #2140575
# r 8fe4 db  = #2140576
# w 8fe3 80  = #2140577
# w 8fe2 9a  = #2140578
# @ dc07 10  = #2140579 T0(0 3e 3e 1  2 3 4 3f):009c07 :: "ioman.0a2512cd6d"+060c                     ldy       <D.Proc             get current process ptr
# & dc08 9e  = #2140580
# & dc09 50  = #2140581
# - ---- --  = #2140582
# r 0050 8e  =Y #2140583
# r 0051 00  = #2140584
# @ dc0a a6  = #2140585 T0(0 3e 3e 1  2 3 4 3f):009c0a :: "ioman.0a2512cd6d"+060f                     lda       <P$IOQN,y           get ID# of next process in I/O queue
# & dc0b a8  = #2140586
# & dc0c 10  = #2140587
# - ---- --  = #2140588
# r 8e10 00  = #2140589
# @ dc0d 27  = #2140590 T0(0 3e 3e 1  2 3 4 3f):009c0d :: "ioman.0a2512cd6d"+0612                     beq       L05AC               There is none, return
# & dc0e 0d  = #2140591
# - ---- --  = #2140592
# @ dc1c 5f  = #2140593 T0(0 3e 3e 1  2 3 4 3f):009c1c :: "ioman.0a2512cd6d"+0621 L05AC               clrb
# & dc1d 35  = #2140594
# @ dc1d 35  = #2140595 T0(0 3e 3e 1  2 3 4 3f):009c1d :: "ioman.0a2512cd6d"+0622                     puls      pc,y                Restore Y & return
# & dc1e a0  = #2140596
# - ---- --  = #2140597
# - ---- --  = #2140598
# r 8fe2 9a  = #2140599
# r 8fe3 80  = #2140600
# r 8fe4 db  = #2140601
# r 8fe5 ac  = #2140602
# r 8fe6 84  = #2140603
# @ dbac 10  = #2140604 T0(0 3e 3e 1  2 3 4 3f):009bac :: "ioman.0a2512cd6d"+05b1                     ldy       $04,s               get Y off stack
# & dbad ae  = #2140605
# & dbae 64  = #2140606
# & dbaf 9e  = #2140607
# - ---- --  = #2140608
# r 8fea 9a  =Y #2140609
# r 8feb 80  = #2140610
# @ dbaf 9e  = #2140611 T0(0 3e 3e 1  2 3 4 3f):009baf :: "ioman.0a2512cd6d"+05b4                     ldx       <D.Proc             Get current process dsc ptr
# & dbb0 50  = #2140612
# - ---- --  = #2140613
# r 0050 8e  =Y #2140614
# r 0051 00  = #2140615
# @ dbb1 a6  = #2140616 T0(0 3e 3e 1  2 3 4 3f):009bb1 :: "ioman.0a2512cd6d"+05b6                     lda       P$ID,x              Get process id #
# & dbb2 84  = #2140617
# & dbb3 a1  = #2140618
# r 8e00 05  = #2140619
# @ dbb3 a1  = #2140620 T0(0 3e 3e 1  2 3 4 3f):009bb3 :: "ioman.0a2512cd6d"+05b8                     cmpa      PD.CPR,y            Same as current process # using this path descriptor?
# & dbb4 25  = #2140621
# & dbb5 26  = #2140622
# - ---- --  = #2140623
# r 9a85 05  = #2140624
# @ dbb5 26  = #2140625 T0(0 3e 3e 1  2 3 4 3f):009bb5 :: "ioman.0a2512cd6d"+05ba                     bne       L0549               No, clean up and return
# & dbb6 02  = #2140626
# - ---- --  = #2140627
# @ dbb7 6f  = #2140628 T0(0 3e 3e 1  2 3 4 3f):009bb7 :: "ioman.0a2512cd6d"+05bc                     clr       PD.CPR,y            Yes, clear out current process # in path descriptor
# & dbb8 25  = #2140629
# & dbb9 35  = #2140630
# - ---- --  = #2140631
# r 9a85 05  =Y #2140632
# - ---- --  =Y #2140633
# w 9a85 00  = #2140634
# @ dbb9 35  = #2140635 T0(0 3e 3e 1  2 3 4 3f):009bb9 :: "ioman.0a2512cd6d"+05be L0549               puls      pc,u,y,x,b,cc       return.. with return status in C, B.
# & dbba f5  = #2140636
# - ---- --  = #2140637
# - ---- --  = #2140638
# r 8fe6 84  = #2140639
# r 8fe7 00  = #2140640
# r 8fe8 8e  = #2140641
# r 8fe9 42  = #2140642
# r 8fea 9a  = #2140643
# r 8feb 80  = #2140644
# r 8fec 8f  = #2140645
# r 8fed f4  = #2140646
# r 8fee f2  = #2140647
# r 8fef fc  = #2140648
# r 8ff0 8f  = #2140649
# @ f2fc 35  = #2140650 T0(0 3e 3e 1  2 3 4 3f):07f2fc :: "krn.0edf349400"+02fc                     puls      u                   restore the pointer
# & f2fd 40  = #2140651
# - ---- --  = #2140652
# - ---- --  = #2140653
# r 8ff0 8f  = #2140654
# r 8ff1 f4  = #2140655
# r 8ff2 f2  = #2140656
# @ f2fe 1f  = #2140657 T0(0 3e 3e 1  2 3 4 3f):07f2fe :: "krn.0edf349400"+02fe L0355               tfr       cc,a                move CC to A for a stack update
# & f2ff a8  = #2140658
# - ---- --  = #2140659
# - ---- --  = #2140660
# - ---- --  = #2140661
# - ---- --  = #2140662
# @ f300 24  = #2140663 T0(0 3e 3e 1  2 3 4 3f):07f300 :: "krn.0edf349400"+0300                     bcc       L035B               go update it if no error from call
# & f301 02  = #2140664
# - ---- --  = #2140665
# @ f304 e6  = #2140666 T0(0 3e 3e 1  2 3 4 3f):07f304 :: "krn.0edf349400"+0304 L035B               ldb       R$CC,u              get the caller's CC, R$CC = $00
# & f305 c4  = #2140667
# & f306 84  = #2140668
# r 8ff4 80  = #2140669
# @ f306 84  = #2140670 T0(0 3e 3e 1  2 3 4 3f):07f306 :: "krn.0edf349400"+0306                     anda      #$2F                [A]=H,N,Z,V,C
# & f307 2f  = #2140671
# @ f308 c4  = #2140672 T0(0 3e 3e 1  2 3 4 3f):07f308 :: "krn.0edf349400"+0308                     andb      #$D0                [B]=E,F,I
# & f309 d0  = #2140673
# @ f30a 34  = #2140674 T0(0 3e 3e 1  2 3 4 3f):07f30a :: "krn.0edf349400"+030a                     pshs      b                   save B on the stack
# & f30b 04  = #2140675
# - ---- --  = #2140676
# - ---- --  = #2140677
# r 8ff2 f2  = #2140678
# w 8ff1 80  = #2140679
# @ f30c aa  = #2140680 T0(0 3e 3e 1  2 3 4 3f):07f30c :: "krn.0edf349400"+030c                     ora       ,s+                 OR A with it
# & f30d e0  = #2140681
# & f30e a7  = #2140682
# - ---- --  = #2140683
# - ---- --  = #2140684
# r 8ff1 80  = #2140685
# @ f30e a7  = #2140686 T0(0 3e 3e 1  2 3 4 3f):07f30e :: "krn.0edf349400"+030e                     sta       R$CC,u              store it in the caller's CC, R$CC = $00
# & f30f c4  = #2140687
# & f310 39  = #2140688
# w 8ff4 84  = #2140689
# @ f310 39  = #2140690 T0(0 3e 3e 1  2 3 4 3f):07f310 :: "krn.0edf349400"+0310                     rts                           return
# & f311 4f  = #2140691
# r 8ff2 f2  = #2140692
# r 8ff3 5a  = #2140693
# - ---- --  = #2140694
# @ f25a a6  = #2140695 T0(0 3e 3e 1  2 3 4 3f):07f25a :: "krn.0edf349400"+025a                     lda       R$CC,u              get the caller's CC
# & f25b c4  = #2140696
# & f25c 84  = #2140697
# r 8ff4 84  = #2140698
# @ f25c 84  = #2140699 T0(0 3e 3e 1  2 3 4 3f):07f25c :: "krn.0edf349400"+025c                     anda      #^IntMasks          unmask interrupts
# & f25d af  = #2140700
# @ f25e a7  = #2140701 T0(0 3e 3e 1  2 3 4 3f):07f25e :: "krn.0edf349400"+025e                     sta       R$CC,u              and save it back
# & f25f c4  = #2140702
# & f260 9e  = #2140703
# w 8ff4 84  = #2140704
# @ f260 9e  = #2140705 T0(0 3e 3e 1  2 3 4 3f):07f260 :: "krn.0edf349400"+0260                     ldx       <D.Proc             get the current process descriptor
# & f261 50  = #2140706
# - ---- --  = #2140707
# r 0050 8e  =Y #2140708
# r 0051 00  = #2140709
# @ f262 a6  = #2140710 T0(0 3e 3e 1  2 3 4 3f):07f262 :: "krn.0edf349400"+0262                     lda       P$State,x           get the process state
# & f263 0c  = #2140711
# & f264 84  = #2140712
# - ---- --  = #2140713
# r 8e0c 80  = #2140714
# @ f264 84  = #2140715 T0(0 3e 3e 1  2 3 4 3f):07f264 :: "krn.0edf349400"+0264                     anda      #^(SysState+TimOut) turn off the system state and timeout flags
# & f265 5f  = #2140716
# @ f266 a7  = #2140717 T0(0 3e 3e 1  2 3 4 3f):07f266 :: "krn.0edf349400"+0266                     sta       P$State,x           and save it back
# & f267 0c  = #2140718
# & f268 17  = #2140719
# - ---- --  = #2140720
# w 8e0c 00  = #2140721
# @ f268 17  = #2140722 T0(0 3e 3e 1  2 3 4 3f):07f268 :: "krn.0edf349400"+0268                     lbsr      TstImg              it doesn't hurt to call this twice
# & f269 09  = #2140723
# & f26a d6  = #2140724
# - ---- --  = #2140725
# - ---- --  = #2140726
# - ---- --  = #2140727
# - ---- --  = #2140728
# w 8ff3 6b  = #2140729
# w 8ff2 f2  = #2140730
# @ fc41 e6  = #2140731 T0(0 3e 3e 1  2 3 4 3f):07fc41 :: "krn.0edf349400"+0c41                     ldb       P$State,x           DAT image change flagged in process desc?
# & fc42 0c  = #2140732
# & fc43 c5  = #2140733
# - ---- --  = #2140734
# r 8e0c 00  = #2140735
# @ fc43 c5  = #2140736 T0(0 3e 3e 1  2 3 4 3f):07fc43 :: "krn.0edf349400"+0c43                     bitb      #ImgChg
# & fc44 10  = #2140737
# @ fc45 27  = #2140738 T0(0 3e 3e 1  2 3 4 3f):07fc45 :: "krn.0edf349400"+0c45                     beq       L0C65               if not, exit now: (clear carry not needed)
# & fc46 ef  = #2140739
# - ---- --  = #2140740
# @ fc36 39  = #2140741 T0(0 3e 3e 1  2 3 4 3f):07fc36 :: "krn.0edf349400"+0c36 L0C65               rts                           return
# & fc37 ae  = #2140742
# r 8ff2 f2  = #2140743
# r 8ff3 6b  = #2140744
# - ---- --  = #2140745
# @ f26b a6  = #2140746 T0(0 3e 3e 1  2 3 4 3f):07f26b :: "krn.0edf349400"+026b                     lda       P$State,x           get current state of the process
# & f26c 0c  = #2140747
# & f26d aa  = #2140748
# - ---- --  = #2140749
# r 8e0c 00  = #2140750
# @ f26d aa  = #2140751 T0(0 3e 3e 1  2 3 4 3f):07f26d :: "krn.0edf349400"+026d                     ora       <P$Signal,x         is there a pending signal?
# & f26e 88  = #2140752
# & f26f 19  = #2140753
# - ---- --  = #2140754
# r 8e19 00  = #2140755
# @ f270 97  = #2140756 T0(0 3e 3e 1  2 3 4 3f):07f270 :: "krn.0edf349400"+0270                     sta       <D.Quick            save quick return flag
# & f271 3e  = #2140757
# - ---- --  = #2140758
# w 003e 00  = #2140759
# @ f272 27  = #2140760 T0(0 3e 3e 1  2 3 4 3f):07f272 :: "krn.0edf349400"+0272                     beq       AllClr              if nothing changed, do full checks
# & f273 05  = #2140761
# - ---- --  = #2140762
# @ f279 96  = #2140763 T0(0 3e 3e 1  2 3 4 3f):07f279 :: "krn.0edf349400"+0279                     lda       <D.QCnt             get the flag
# & f27a 7c  = #2140764
# - ---- --  = #2140765
# r 007c 05  = #2140766
# @ f27b 4c  = #2140767 T0(0 3e 3e 1  2 3 4 3f):07f27b :: "krn.0edf349400"+027b                     inca                          increment it
# & f27c 84  = #2140768
# @ f27c 84  = #2140769 T0(0 3e 3e 1  2 3 4 3f):07f27c :: "krn.0edf349400"+027c                     anda      #$1F                clear these bits
# & f27d 1f  = #2140770
# @ f27e 97  = #2140771 T0(0 3e 3e 1  2 3 4 3f):07f27e :: "krn.0edf349400"+027e                     sta       <D.QCnt             and save it back
# & f27f 7c  = #2140772
# - ---- --  = #2140773
# w 007c 06  = #2140774
# @ f280 27  = #2140775 T0(0 3e 3e 1  2 3 4 3f):07f280 :: "krn.0edf349400"+0280                     beq       DoFull              branch if zero
# & f281 f2  = #2140776
# - ---- --  = #2140777
# @ f282 c6  = #2140778 T0(0 3e 3e 1  2 3 4 3f):07f282 :: "krn.0edf349400"+0282                     ldb       #R$Size             else get the size of the register stack
# & f283 0c  = #2140779
# @ f284 10  = #2140780 T0(0 3e 3e 1  2 3 4 3f):07f284 :: "krn.0edf349400"+0284                     ldy       #Where+SWIStack     and the stack at the top of memory
# & f285 8e  = #2140781
# & f286 fe  =Y #2140782
# & f287 df  = #2140783
# @ f288 1a  = #2140784 T0(0 3e 3e 1  2 3 4 3f):07f288 :: "krn.0edf349400"+0288                     orcc      #IntMasks           mask interrupts
# & f289 50  = #2140785
# & f28a a6  = #2140786
# @ f28a a6  = #2140787 T0(0 3e 3e 1  2 3 4 3f):07f28a :: "krn.0edf349400"+028a l@                  lda       ,u+                 get the source byte
# & f28b c0  = #2140788
# & f28c a7  = #2140789
# - ---- --  = #2140790
# - ---- --  = #2140791
# r 8ff4 84  = #2140792
# @ f28c a7  = #2140793 T0(0 3e 3e 1  2 3 4 3f):07f28c :: "krn.0edf349400"+028c                     sta       ,y+                 save it at the destination
# & f28d a0  = #2140794
# & f28e 5a  = #2140795
# - ---- --  = #2140796
# - ---- --  = #2140797
# w fedf 84  = #2140798
# @ f28e 5a  = #2140799 T0(0 3e 3e 1  2 3 4 3f):07f28e :: "krn.0edf349400"+028e                     decb                          decrement the counter
# & f28f 26  = #2140800
# @ f28f 26  = #2140801 T0(0 3e 3e 1  2 3 4 3f):07f28f :: "krn.0edf349400"+028f                     bne       l@                  branch if not done
# & f290 f9  = #2140802
# - ---- --  = #2140803
# @ f28a a6  = #2140804 T0(0 3e 3e 1  2 3 4 3f):07f28a :: "krn.0edf349400"+028a l@                  lda       ,u+                 get the source byte
# & f28b c0  = #2140805
# & f28c a7  = #2140806
# - ---- --  = #2140807
# - ---- --  = #2140808
# r 8ff5 00  = #2140809
# @ f28c a7  = #2140810 T0(0 3e 3e 1  2 3 4 3f):07f28c :: "krn.0edf349400"+028c                     sta       ,y+                 save it at the destination
# & f28d a0  = #2140811
# & f28e 5a  = #2140812
# - ---- --  = #2140813
# - ---- --  = #2140814
# w fee0 00  = #2140815
# @ f28e 5a  = #2140816 T0(0 3e 3e 1  2 3 4 3f):07f28e :: "krn.0edf349400"+028e                     decb                          decrement the counter
# & f28f 26  = #2140817
# @ f28f 26  = #2140818 T0(0 3e 3e 1  2 3 4 3f):07f28f :: "krn.0edf349400"+028f                     bne       l@                  branch if not done
# & f290 f9  = #2140819
# - ---- --  = #2140820
# @ f28a a6  = #2140821 T0(0 3e 3e 1  2 3 4 3f):07f28a :: "krn.0edf349400"+028a l@                  lda       ,u+                 get the source byte
# & f28b c0  = #2140822
# & f28c a7  = #2140823
# - ---- --  = #2140824
# - ---- --  = #2140825
# r 8ff6 20  = #2140826
# @ f28c a7  = #2140827 T0(0 3e 3e 1  2 3 4 3f):07f28c :: "krn.0edf349400"+028c                     sta       ,y+                 save it at the destination
# & f28d a0  = #2140828
# & f28e 5a  = #2140829
# - ---- --  = #2140830
# - ---- --  = #2140831
# w fee1 20  = #2140832
# @ f28e 5a  = #2140833 T0(0 3e 3e 1  2 3 4 3f):07f28e :: "krn.0edf349400"+028e                     decb                          decrement the counter
# & f28f 26  = #2140834
# @ f28f 26  = #2140835 T0(0 3e 3e 1  2 3 4 3f):07f28f :: "krn.0edf349400"+028f                     bne       l@                  branch if not done
# & f290 f9  = #2140836
# - ---- --  = #2140837
# @ f28a a6  = #2140838 T0(0 3e 3e 1  2 3 4 3f):07f28a :: "krn.0edf349400"+028a l@                  lda       ,u+                 get the source byte
# & f28b c0  = #2140839
# & f28c a7  = #2140840
# - ---- --  = #2140841
# - ---- --  = #2140842
# r 8ff7 00  = #2140843
# @ f28c a7  = #2140844 T0(0 3e 3e 1  2 3 4 3f):07f28c :: "krn.0edf349400"+028c                     sta       ,y+                 save it at the destination
# & f28d a0  = #2140845
# & f28e 5a  = #2140846
# - ---- --  = #2140847
# - ---- --  = #2140848
# w fee2 00  = #2140849
# @ f28e 5a  = #2140850 T0(0 3e 3e 1  2 3 4 3f):07f28e :: "krn.0edf349400"+028e                     decb                          decrement the counter
# & f28f 26  = #2140851
# @ f28f 26  = #2140852 T0(0 3e 3e 1  2 3 4 3f):07f28f :: "krn.0edf349400"+028f                     bne       l@                  branch if not done
# & f290 f9  = #2140853
# - ---- --  = #2140854
# @ f28a a6  = #2140855 T0(0 3e 3e 1  2 3 4 3f):07f28a :: "krn.0edf349400"+028a l@                  lda       ,u+                 get the source byte
